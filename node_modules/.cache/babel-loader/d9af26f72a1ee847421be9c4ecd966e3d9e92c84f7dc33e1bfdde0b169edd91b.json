{"ast":null,"code":"var _jsxFileName = \"/home/user/ClinicalNotesFrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button, Form, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [clinicalNotes, setClinicalNotes] = useState('');\n  const [patientContext, setPatientContext] = useState('');\n  const [error, setError] = useState('');\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []);\n  const startRecording = () => {\n    setIsRecording(true);\n    setTranscription('');\n    setError('');\n    websocketRef.current = new WebSocket('ws://localhost:5000/ws');\n    websocketRef.current.onmessage = event => {\n      setTranscription(prev => prev + ' ' + event.data);\n    };\n    websocketRef.current.onerror = event => {\n      setError('WebSocket error occurred');\n      setIsRecording(false);\n    };\n    websocketRef.current.onclose = () => {\n      if (isRecording) {\n        setError('WebSocket connection closed unexpectedly');\n        setIsRecording(false);\n      }\n    };\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n    if (websocketRef.current) {\n      websocketRef.current.close();\n    }\n  };\n  const generateNotes = async () => {\n    try {\n      setError('');\n      const response = await axios.post('http://localhost:5000/api/RealTimeTranscription/generate-notes', {\n        transcription: transcription,\n        patientContext: patientContext\n      });\n      setClinicalNotes(response.data);\n    } catch (error) {\n      console.error('Error generating clinical notes:', error);\n      setError('Failed to generate clinical notes. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"AI Clinical Notes Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Patient Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: patientContext,\n            onChange: e => setPatientContext(e.target.value),\n            placeholder: \"Enter patient context here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: isRecording ? \"danger\" : \"primary\",\n          onClick: isRecording ? stopRecording : startRecording,\n          className: \"mb-3\",\n          children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Real-time Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 10,\n            value: transcription,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: generateNotes,\n          className: \"mb-3\",\n          disabled: !transcription,\n          children: \"Generate Clinical Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Generated Clinical Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 10,\n            value: clinicalNotes,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dEMKUVzELY29jsiSKw3mwU8zt2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Button","Form","Alert","axios","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","transcription","setTranscription","clinicalNotes","setClinicalNotes","patientContext","setPatientContext","error","setError","websocketRef","current","close","startRecording","WebSocket","onmessage","event","prev","data","onerror","onclose","stopRecording","generateNotes","response","post","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","md","Group","Label","Control","as","rows","value","onChange","e","target","placeholder","onClick","readOnly","disabled","_c","$RefreshReg$"],"sources":["/home/user/ClinicalNotesFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button, Form, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [clinicalNotes, setClinicalNotes] = useState('');\n  const [patientContext, setPatientContext] = useState('');\n  const [error, setError] = useState('');\n  const websocketRef = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []);\n\n  const startRecording = () => {\n    setIsRecording(true);\n    setTranscription('');\n    setError('');\n    websocketRef.current = new WebSocket('ws://localhost:5000/ws');\n    websocketRef.current.onmessage = (event) => {\n      setTranscription((prev) => prev + ' ' + event.data);\n    };\n    websocketRef.current.onerror = (event) => {\n      setError('WebSocket error occurred');\n      setIsRecording(false);\n    };\n    websocketRef.current.onclose = () => {\n      if (isRecording) {\n        setError('WebSocket connection closed unexpectedly');\n        setIsRecording(false);\n      }\n    };\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n    if (websocketRef.current) {\n      websocketRef.current.close();\n    }\n  };\n\n  const generateNotes = async () => {\n    try {\n      setError('');\n      const response = await axios.post('http://localhost:5000/api/RealTimeTranscription/generate-notes', {\n        transcription: transcription,\n        patientContext: patientContext\n      });\n      setClinicalNotes(response.data);\n    } catch (error) {\n      console.error('Error generating clinical notes:', error);\n      setError('Failed to generate clinical notes. Please try again.');\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h1 className=\"text-center mb-4\">AI Clinical Notes Generator</h1>\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      <Row>\n        <Col md={6}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Patient Context</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              value={patientContext}\n              onChange={(e) => setPatientContext(e.target.value)}\n              placeholder=\"Enter patient context here...\"\n            />\n          </Form.Group>\n          <Button\n            variant={isRecording ? \"danger\" : \"primary\"}\n            onClick={isRecording ? stopRecording : startRecording}\n            className=\"mb-3\"\n          >\n            {isRecording ? \"Stop Recording\" : \"Start Recording\"}\n          </Button>\n          <Form.Group>\n            <Form.Label>Real-time Transcription</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={10}\n              value={transcription}\n              readOnly\n            />\n          </Form.Group>\n        </Col>\n        <Col md={6}>\n          <Button\n            variant=\"success\"\n            onClick={generateNotes}\n            className=\"mb-3\"\n            disabled={!transcription}\n          >\n            Generate Clinical Notes\n          </Button>\n          <Form.Group>\n            <Form.Label>Generated Clinical Notes</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={10}\n              value={clinicalNotes}\n              readOnly\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}