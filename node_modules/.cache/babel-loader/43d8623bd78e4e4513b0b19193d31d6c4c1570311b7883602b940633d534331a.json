{"ast":null,"code":"var _jsxFileName = \"/home/user/ClinicalNotesFrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [clinicalNotes, setClinicalNotes] = useState('');\n  const [patientContext, setPatientContext] = useState('');\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []);\n  const startRecording = () => {\n    setIsRecording(true);\n    setTranscription('');\n    websocketRef.current = new WebSocket('wss://your-backend-url/ws');\n    websocketRef.current.onmessage = event => {\n      setTranscription(prev => prev + ' ' + event.data);\n    };\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n    if (websocketRef.current) {\n      websocketRef.current.close();\n    }\n  };\n  const generateNotes = async () => {\n    try {\n      const response = await axios.post('https://your-backend-url/api/RealTimeTranscription/generate-notes', {\n        transcription: transcription,\n        patientContext: patientContext\n      });\n      setClinicalNotes(response.data);\n    } catch (error) {\n      console.error('Error generating clinical notes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"AI Clinical Notes Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Patient Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: patientContext,\n            onChange: e => setPatientContext(e.target.value),\n            placeholder: \"Enter patient context here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: isRecording ? \"danger\" : \"primary\",\n          onClick: isRecording ? stopRecording : startRecording,\n          className: \"mb-3\",\n          children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Real-time Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 10,\n            value: transcription,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: generateNotes,\n          className: \"mb-3\",\n          disabled: !transcription,\n          children: \"Generate Clinical Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Generated Clinical Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 10,\n            value: clinicalNotes,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dp4cTnDfz2hg/nGNlK4xM4rynnY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Button","Form","axios","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","transcription","setTranscription","clinicalNotes","setClinicalNotes","patientContext","setPatientContext","websocketRef","current","close","startRecording","WebSocket","onmessage","event","prev","data","stopRecording","generateNotes","response","post","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","Group","Label","Control","as","rows","value","onChange","e","target","placeholder","variant","onClick","readOnly","disabled","_c","$RefreshReg$"],"sources":["/home/user/ClinicalNotesFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [clinicalNotes, setClinicalNotes] = useState('');\n  const [patientContext, setPatientContext] = useState('');\n  const websocketRef = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []);\n\n  const startRecording = () => {\n    setIsRecording(true);\n    setTranscription('');\n    websocketRef.current = new WebSocket('wss://your-backend-url/ws');\n    websocketRef.current.onmessage = (event) => {\n      setTranscription((prev) => prev + ' ' + event.data);\n    };\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n    if (websocketRef.current) {\n      websocketRef.current.close();\n    }\n  };\n\n  const generateNotes = async () => {\n    try {\n      const response = await axios.post('https://your-backend-url/api/RealTimeTranscription/generate-notes', {\n        transcription: transcription,\n        patientContext: patientContext\n      });\n      setClinicalNotes(response.data);\n    } catch (error) {\n      console.error('Error generating clinical notes:', error);\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h1 className=\"text-center mb-4\">AI Clinical Notes Generator</h1>\n      <Row>\n        <Col md={6}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Patient Context</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              value={patientContext}\n              onChange={(e) => setPatientContext(e.target.value)}\n              placeholder=\"Enter patient context here...\"\n            />\n          </Form.Group>\n          <Button\n            variant={isRecording ? \"danger\" : \"primary\"}\n            onClick={isRecording ? stopRecording : startRecording}\n            className=\"mb-3\"\n          >\n            {isRecording ? \"Stop Recording\" : \"Start Recording\"}\n          </Button>\n          <Form.Group>\n            <Form.Label>Real-time Transcription</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={10}\n              value={transcription}\n              readOnly\n            />\n          </Form.Group>\n        </Col>\n        <Col md={6}>\n          <Button\n            variant=\"success\"\n            onClick={generateNotes}\n            className=\"mb-3\"\n            disabled={!transcription}\n          >\n            Generate Clinical Notes\n          </Button>\n          <Form.Group>\n            <Form.Label>Generated Clinical Notes</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={10}\n              value={clinicalNotes}\n              readOnly\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}